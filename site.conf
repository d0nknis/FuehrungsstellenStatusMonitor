
log_format  traefik  '$remote_addr - $remote_user [$time_local] [$msec] [$request_time] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
server {
    listen      80 default_server;
    index index.php;
    server_name php-docker.local;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log traefik;
    root /code;

    location / {
            try_files $uri $uri/ einsatzmonitor.php;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index einsatzmonitor.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location /robots.txt {
	add_header Content-Type text/plain;
	return 200 "User-agent: *\nDisallow: /\n";
    }
## Begin - Index
location @index {
	try_files = /einsatzmonitor.php?_url=$uri&$query_string;
}
## End - Index

## Begin - Security
# set error handler for these to the @index location
error_page 418 = @index;
# deny access to other .php-scripts
location ~ \.php$ { return 418; }
# deny all direct access for these folders
location ~* /(\.git|cache|bin|logs|backup|tests)/.*$ { return 418; }
# deny running scripts inside core system folders
location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 418; }
# deny running scripts inside user folder
location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 418; }
# deny access to specific files in the root folder
#location ~ /(LICENSE\.txt|composer\.lock|composer\.json|nginx\.conf|web\.config|htaccess\.txt|\.htaccess) { return 418; }
#location ~ /(LICENSE\.txt|composer.phar|composer\.lock|composer\.json|nginx\.conf|web\.config|htaccess\.txt|\.htaccess|\.gitignore) { return 418; }
location ~ /(LICENSE\.txt|\.gitlab-ci\.yml|composer\.phar|composer\.lock|composer\.json|nginx\.conf|web\.config|htaccess\.txt|\.htaccess|\.gitignore) { return 418; }
## End - Security


}
